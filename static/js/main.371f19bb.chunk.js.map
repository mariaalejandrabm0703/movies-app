{"version":3,"sources":["helpers/getData.js","components/MovieItem.js","components/MovieGrid.js","hooks/useFetchMovies.js","components/SearchMovie.js","components/App.js","components/MovieDetail.js","routers/AppRouter.js","SearchMovies.js","index.js"],"names":["getMovieByName","movie","a","options","method","url","encodeURI","headers","movies","axios","request","then","response","data","titles","catch","error","console","getMovieById","movieId","log","MovieItem","prueba","className","style","width","src","image","title","to","id","target","MovieGrid","mavie","useState","loading","state","setState","useEffect","useFetch","role","length","map","SearchMovie","setMovies","inputValue","setInputValue","onSubmit","e","preventDefault","trim","type","placeholder","value","onChange","App","MovieDetail","useParams","year","plot","rating","rating_votes","trailer","link","href","AppRouter","exact","path","component","SearchMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.371f19bb.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getMovieByName = async (movie) => {\r\n\r\n  const options = {\r\n    method: \"GET\",\r\n    url:\r\n    `https://imdb-internet-movie-database-unofficial.p.rapidapi.com/search/${ encodeURI( movie ) }`,\r\n    // 'https://imdb-internet-movie-database-unofficial.p.rapidapi.com/search/Men%20in%20black',\r\n    headers: {\r\n      \"x-rapidapi-key\": \"d7828ac82cmshd2ab49d2f63a351p1c649djsnca3b6f57efdf\",\r\n      \"x-rapidapi-host\":\r\n        \"imdb-internet-movie-database-unofficial.p.rapidapi.com\",\r\n    },\r\n  };\r\n  let movies = []\r\n  await axios\r\n    .request(options)\r\n    .then(function async(response) {\r\n        movies=response.data.titles;\r\n    })\r\n    .catch(function (error) {\r\n      console.error(error);\r\n    });\r\n\r\n  return movies;\r\n};\r\n\r\nexport const getMovieById = async (movieId) => {\r\n\r\n  const options = {\r\n    method: \"GET\",\r\n    url:\r\n    `https://imdb-internet-movie-database-unofficial.p.rapidapi.com/film/${ encodeURI( movieId ) }`,\r\n    headers: {\r\n      \"x-rapidapi-key\": \"d7828ac82cmshd2ab49d2f63a351p1c649djsnca3b6f57efdf\",\r\n      \"x-rapidapi-host\":\r\n        \"imdb-internet-movie-database-unofficial.p.rapidapi.com\",\r\n    },\r\n  };\r\n  let movie = {}\r\n  await axios\r\n    .request(options)\r\n    .then(function async(response) {\r\n        movie=response.data;\r\n        console.log(movie)\r\n    })\r\n    .catch(function (error) {\r\n      console.error(error);\r\n    });\r\n\r\n  return movie;\r\n};\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction MovieItem({ movie, prueba = false }) {\r\n\r\n \r\n\r\n  const divStyle = {\r\n    width: \"10rem\",\r\n  };\r\n  return (\r\n    <div className=\"card\" style={divStyle}>\r\n      <img src={movie.image} className=\"card-img-top\" />\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{movie.title}</h5>\r\n  \r\n        <Link to={`./movie/${movie.id}`}  target=\"_blank\">More...</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieItem;\r\n","import React from \"react\";\r\nimport { useFetch } from \"../hooks/useFetchMovies\";\r\nimport MovieItem from \"./MovieItem\";\r\n\r\nfunction MovieGrid({ movie }) {\r\n  const { data, loading } = useFetch(movie);\r\n\r\n  return (\r\n    <div className=\"container mt-2\">\r\n      <h3>{movie}:</h3>\r\n\r\n      {loading && (\r\n        <div className=\"spinner-border text-primary\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      )}\r\n      <div className=\"row row-cols-1 row-cols-md-3 g-4\">\r\n        {data.length !== 0 ? (\r\n          data.map((movie) => <MovieItem prueba={true} key={movie.id} movie={movie} />)\r\n        ) : (\r\n          <p>There are no data ...</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieGrid;\r\n","import { useState, useEffect } from 'react'\nimport { getMovieByName } from '../helpers/getData';\n\n\nexport const useFetch = ( mavie ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getMovieByName( mavie )\n            .then( data => {\n                \n                setState({\n                    data: data,\n                    loading: false\n                });\n            })\n\n    }, [mavie])\n\n    return state;\n}\n\n\n","import React, { useState } from \"react\";\r\n\r\nfunction SearchMovie({ setMovies }) {\r\n\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setMovies((movie) => [inputValue, ...movie,]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-2\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Name movie\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n          />\r\n          <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n            Load\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchMovie;\r\n","import React, { useState } from \"react\";\n\nimport MovieGrid from \"./MovieGrid\";\nimport SearchMovie from \"./SearchMovie\";\n\nfunction App() {\n  const [movies, setMovies] = useState([\"world\"]);\n\n  return (\n    <div className=\"container mt-2\">\n      <h2>Search movies App</h2>\n      <hr />\n      <SearchMovie setMovies={setMovies} />\n      <hr />\n\n      <ol>\n        {movies.map((movie) => (\n          <MovieGrid key={movie} movie={movie} />\n        ))}\n      </ol>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getMovieById } from \"../helpers/getData\";\r\n\r\nfunction MovieDetail() {\r\n  const { movieId } = useParams();\r\n\r\n  const [state, setState] = useState({});\r\n\r\n  useEffect(() => {\r\n    getMovieById(movieId).then((data) => {\r\n      setState(data);\r\n    });\r\n  }, [movieId]);\r\n\r\n  const { title, year, plot, length, rating, rating_votes, trailer } = state;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Movie details</h1>\r\n      <hr />\r\n      {title ? (\r\n        <>\r\n          <p>\r\n            title: {title}({year})\r\n          </p>\r\n          {plot && <p>plot: {plot}</p>}\r\n          {length && <p>length: {length}</p>}\r\n          {rating && <p>rating: {rating}</p>}\r\n          {rating_votes && rating_votes >= 0 && (\r\n            <p>rating_votes: {rating_votes}</p>\r\n          )}\r\n          {trailer.link && trailer.link !== \"\" &&(\r\n            <a target=\"_blank\" href={trailer.link}>\r\n              ¡trailer!\r\n            </a>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <p>No data</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetail;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport App from \"../components/App\";\r\nimport MovieDetail from \"../components/MovieDetail\";\r\n\r\nfunction AppRouter() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/movie/:movieId\" component={MovieDetail} />\r\n          <Route exact path=\"/\" component={App} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default AppRouter;\r\n","import React from 'react'\r\nimport AppRouter from './routers/AppRouter'\r\n\r\nfunction SearchMovies() {\r\n    return (\r\n        <AppRouter />\r\n    )\r\n}\r\n\r\nexport default SearchMovies\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SearchMovies from \"./SearchMovies\"\n\n\nReactDOM.render(<SearchMovies />, document.getElementById(\"root\"));\n"],"sourceRoot":""}